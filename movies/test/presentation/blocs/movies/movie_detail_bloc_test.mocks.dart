// Mocks generated by Mockito 5.0.17 from annotations
// in ditonton/test/presentation/blocs/movies/movie_detail_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:core/core.dart' as _i7;
import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/domain/repositories/watchlist_repositories.dart'
    as _i4;
import 'package:ditonton/domain/usecases/get_movie_watchlist_status.dart'
    as _i11;
import 'package:ditonton/domain/usecases/remove_movie_watchlist.dart' as _i13;
import 'package:ditonton/domain/usecases/save_movie_watchlist.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/domain/entities/movie.dart' as _i10;
import 'package:movies/domain/entities/movie_detail.dart' as _i8;
import 'package:movies/domain/repositories/movie_repository.dart' as _i2;
import 'package:movies/domain/usecases/get_movie_detail.dart' as _i5;
import 'package:movies/domain/usecases/get_movie_recommendations.dart' as _i9;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMovieRepository_0 extends _i1.Fake implements _i2.MovieRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeWatchlistRepository_2 extends _i1.Fake
    implements _i4.WatchlistRepository {}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i5.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i7.Failure, _i8.MovieDetail>>.value(
              _FakeEither_1<_i7.Failure, _i8.MovieDetail>())) as _i6
          .Future<_i3.Either<_i7.Failure, _i8.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i9.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_0()) as _i2.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i10.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i10.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetMovieWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieWatchListStatus extends _i1.Mock
    implements _i11.GetMovieWatchListStatus {
  MockGetMovieWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_2()) as _i4.WatchlistRepository);
  @override
  _i6.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [SaveMovieWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveMovieWatchlist extends _i1.Mock
    implements _i12.SaveMovieWatchlist {
  MockSaveMovieWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_2()) as _i4.WatchlistRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i8.MovieDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveMovieWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveMovieWatchlist extends _i1.Mock
    implements _i13.RemoveMovieWatchlist {
  MockRemoveMovieWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeWatchlistRepository_2()) as _i4.WatchlistRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i8.MovieDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}
