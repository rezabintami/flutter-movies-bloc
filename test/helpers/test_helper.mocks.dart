// Mocks generated by Mockito 5.0.17 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:convert' as _i20;
import 'dart:typed_data' as _i21;

import 'package:core/core.dart' as _i10;
import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i17;
import 'package:ditonton/data/datasources/watchlist_data_source.dart' as _i14;
import 'package:ditonton/data/models/watchlist_table.dart' as _i7;
import 'package:ditonton/domain/entities/watchlist.dart' as _i13;
import 'package:ditonton/domain/repositories/watchlist_repositories.dart'
    as _i9;
import 'package:http/src/base_request.dart' as _i22;
import 'package:http/src/client.dart' as _i19;
import 'package:http/src/response.dart' as _i3;
import 'package:http/src/streamed_response.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/data/datasources/movie_local_data_source.dart' as _i5;
import 'package:movies/data/models/movie_table.dart' as _i8;
import 'package:movies/domain/entities/movie_detail.dart' as _i11;
import 'package:sqflite/sqflite.dart' as _i18;
import 'package:tv/data/datasources/tv_local_data_source.dart' as _i15;
import 'package:tv/data/models/tv_table.dart' as _i16;
import 'package:tv/domain/entities/tv_detail.dart' as _i12;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeResponse_1 extends _i1.Fake implements _i3.Response {}

class _FakeStreamedResponse_2 extends _i1.Fake implements _i4.StreamedResponse {
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i5.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i7.WatchListTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i7.WatchListTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i8.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<_i8.MovieTable?>.value())
          as _i6.Future<_i8.MovieTable?>);
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i9.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> saveMovieWatchlist(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveMovieWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> removeMovieWatchlist(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeMovieWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<bool> isAddedMovieToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedMovieToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> saveTVWatchlist(
          _i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveTVWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, String>> removeTVWatchlist(
          _i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeTVWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i10.Failure, String>>.value(
                  _FakeEither_0<_i10.Failure, String>()))
          as _i6.Future<_i2.Either<_i10.Failure, String>>);
  @override
  _i6.Future<bool> isAddedTVToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedTVToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i10.Failure, List<_i13.Watchlist>>> getWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getWatchlist, []),
              returnValue:
                  Future<_i2.Either<_i10.Failure, List<_i13.Watchlist>>>.value(
                      _FakeEither_0<_i10.Failure, List<_i13.Watchlist>>()))
          as _i6.Future<_i2.Either<_i10.Failure, List<_i13.Watchlist>>>);
}

/// A class which mocks [WatchlistLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalDataSource extends _i1.Mock
    implements _i14.WatchlistLocalDataSource {
  MockWatchlistLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i7.WatchListTable>> getWatchlist() => (super.noSuchMethod(
          Invocation.method(#getWatchlist, []),
          returnValue:
              Future<List<_i7.WatchListTable>>.value(<_i7.WatchListTable>[]))
      as _i6.Future<List<_i7.WatchListTable>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i15.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i7.WatchListTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tv]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i7.WatchListTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i16.TVTable?> getTVById(int? id) => (super.noSuchMethod(
      Invocation.method(#getTVById, [id]),
      returnValue: Future<_i16.TVTable?>.value()) as _i6.Future<_i16.TVTable?>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i17.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i18.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i18.Database?>.value())
          as _i6.Future<_i18.Database?>);
  @override
  _i6.Future<int> insertWatchlist(_i7.WatchListTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlist(_i7.WatchListTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getMovieById(int? id, int? isMovie) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id, isMovie]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlist() => (super.noSuchMethod(
      Invocation.method(#getWatchlist, []),
      returnValue: Future<List<Map<String, dynamic>>>.value(
          <Map<String, dynamic>>[])) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> insertWatchlistTV(_i7.WatchListTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistTV, [tv]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlistTV(_i7.WatchListTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTV, [tv]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getTVById(int? id, int? isMovie) =>
      (super.noSuchMethod(Invocation.method(#getTVById, [id, isMovie]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i19.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i20.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i20.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i20.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<_i3.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i20.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i6.Future<_i3.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i21.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i21.Uint8List>.value(_i21.Uint8List(0)))
          as _i6.Future<_i21.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i22.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_2()))
          as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
